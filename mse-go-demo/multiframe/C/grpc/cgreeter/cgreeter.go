// Code generated by goctl. DO NOT EDIT.
// Source: demo.proto

package cgreeter

import (
	"context"

	"github.com/aliyun/alibabacloud-microservice-demo/mse-go-demo/multiframe/C/grpc/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CSayHelloReq  = __.CSayHelloReq
	CSayHelloResp = __.CSayHelloResp

	CGreeter interface {
		// 定义一个 SayHello 一元 rpc 方法，请求体和响应体必填。
		CSayHello(ctx context.Context, in *CSayHelloReq, opts ...grpc.CallOption) (*CSayHelloResp, error)
	}

	defaultCGreeter struct {
		cli zrpc.Client
	}
)

func NewCGreeter(cli zrpc.Client) CGreeter {
	return &defaultCGreeter{
		cli: cli,
	}
}

// 定义一个 SayHello 一元 rpc 方法，请求体和响应体必填。
func (m *defaultCGreeter) CSayHello(ctx context.Context, in *CSayHelloReq, opts ...grpc.CallOption) (*CSayHelloResp, error) {
	client := __.NewCGreeterClient(m.cli.Conn())
	return client.CSayHello(ctx, in, opts...)
}
